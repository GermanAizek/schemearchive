---
import type { SelectProperty } from '../../../lib/interfaces.ts'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts'
import {
  getPostsByTag,
  getRankedPosts,
  getAllTags,
  getNumberOfPagesByTag,
} from '../../../lib/notion/client.ts'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import styles from '../../../styles/blog.module.css'
import '../../../styles/notion-color.css'

export async function getStaticPaths() {
  const allTags = await getAllTags()
  return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name } }))
}

const { tag } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPagesByTag(tag),
])

const currentTag = posts[0].Tags.find((t) => t.name === tag)
---

<Layout title={`Posts di ${tag}`} path={`/posts/tag/${tag}`}>
  <div slot="main">
    <div class="mx-4 sm:mx-0">

      <section>
        <div class="w-full mx-auto md:max-w-5xl px-5 py-24">
          <div class="flex flex-col">
            <div class="h-1 bg-gray-200 rounded overflow-hidden">
              <div class="w-24 h-full bg-amber-500"></div>
            </div>
            <div class="flex flex-wrap sm:flex-row flex-col py-6 mb-12">
              <h1 class="sm:w-2/5 mb-2 sm:mb-0"><span class={`tag ${currentTag.color}`}>{tag}</span></h1>
              <!-- <p class="sm:w-3/5 leading-relaxed text-base sm:pl-10 pl-0">Posts.Title</p> -->
            </div>
          </div>

    <div class="flex flex-wrap sm:-m-4 -mx-4 -mb-10 -mt-4">
            
      <!-- card -->
      {
        posts.length === 0 ? (
          <NoContents contents={posts} />
        ) : (
          posts.map((post) => (
      <div class="p-4 md:w-1/3 sm:mb-0 mb-6" key={post.Slug}>
        <PostFeaturedImage post={post} />
        <PostTitle post={post} />
        <PostExcerpt post={post} />
        
      </div>
      ))
        )
      }
      <!-- end card  -->
    </div>
  </div>
</section>

</div>

    <footer>
      <Pagination tag={tag} currentPage={1} numberOfPages={numberOfPages} />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="Recommended" posts={rankedPosts} />
    <BlogTagsLink heading="Categories" tags={tags} />
  </div>
</Layout>

<style>
  .tag-container {
    margin: 0;
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  @media (max-width: 640px) {
    .tag-container {
      font-size: 1.15rem;
    }
  }
  span.tag {
    border-radius: 4px;
    padding: 3px 9px;
    background: var(--tag-bg-light-gray);
  }
</style>