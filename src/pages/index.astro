---
import { NUMBER_OF_POSTS_PER_PAGE } from '../server-constants.ts'
import {
  getPosts,
  getAllPosts,
  getRankedPosts,
  getPostsByTag,
  getAllTags,
  getNumberOfPages,
} from '../lib/notion/client.ts'
import Layout from '../layouts/Layout.astro'
import NoContents from '../components/NoContents.astro'
import PostDate from '../components/PostDate.astro'
import PostTags from '../components/PostTags.astro'
import PostTitle from '../components/PostTitle.astro'
import PostFeaturedImage from '../components/PostFeaturedImage.astro'
import PostExcerpt from '../components/PostExcerpt.astro'
import ReadMoreLink from '../components/ReadMoreLink.astro'
import Pagination from '../components/Pagination.astro'
import BlogPostsLink from '../components/BlogPostsLink.astro'
import BlogTagsLink from '../components/BlogTagsLink.astro'

import styles from '../styles/blog.module.css'

const [posts, allPosts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPosts(NUMBER_OF_POSTS_PER_PAGE),
  getAllPosts(),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPages(),
])
---

<Layout>
  <div style="display: flex; flex-wrap: wrap;" slot="main" class={styles.main}>
    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div style="flex: 50%; box-sizing: border-box; padding: 10px;" class={styles.post} key={post.Slug}>
            <PostDate post={post} />
            <PostTags post={post} />
            <PostTitle post={post} />
            <PostFeaturedImage post={post} />
            <PostExcerpt post={post} />
            <ReadMoreLink post={post} />
          </div>
        ))
      )
    }

    <footer>
      <Pagination currentPage={1} numberOfPages={numberOfPages} />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="astro-notion-blog" 
      posts={allPosts.filter(
        (p: interfaces.Post) => p.Tags.some(tag => tag.name === 'astro-notion-blog'
      ))}
    />
    <BlogPostsLink heading="ゼロトラスト" 
      posts={allPosts.filter(
        (p: interfaces.Post) => p.Tags.some(tag => tag.name === 'ゼロトラスト'
      ))}
    />
    <BlogPostsLink heading="マイクロセグメンテーション" 
      posts={allPosts.filter(
        (p: interfaces.Post) => p.Tags.some(tag => tag.name === 'マイクロセグメンテーション'
      ))}
    />
    <BlogPostsLink heading="脱炭素" 
      posts={allPosts.filter(
        (p: interfaces.Post) => p.Tags.some(tag => tag.name === '脱炭素'
      ))}
    />
    <BlogPostsLink heading="Bash" 
      posts={allPosts.filter(
        (p: interfaces.Post) => p.Tags.some(tag => tag.name === 'Bash'
      ))}
    />
    <BlogPostsLink heading="CSharp" 
      posts={allPosts.filter(
        (p: interfaces.Post) => p.Tags.some(tag => tag.name === 'CSharp'
      ))}
    />
  </div>
  <div slot="bside" class={styles.bside}>
    <BlogTagsLink heading="カテゴリ" tags={tags} />
  </div>
</Layout>
